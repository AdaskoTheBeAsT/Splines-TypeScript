trigger:
  - main
  - refs/tags/v*

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
    fetchDepth: 0

  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '20.x'

  - task: Bash@3
    displayName: 'Install yarn global'
    inputs:
      targetType: 'inline'
      script: |
        npm i -g yarn

  - task: Bash@3
    displayName: 'Install dependencies'
    inputs:
      targetType: 'inline'
      script: |
        yarn --frozen-lockfile

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'adaskothebeast-github'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'AdaskoTheBeAsT_Splines-TypeScript'
      cliSources: 'libs/splines/src/'
      extraProperties: |
        sonar.tests=libs/splines/src/
        sonar.test.inclusions=**/*.spec.ts,**/*.spec.tsx,**/*.spec.js,**/*.spec.jsx,**/*.test.ts,**/*.test.tsx,**/*.test.js,**/*.test.jsx
        sonar.coverage.exclusions=libs/**/src/**/*.spec.ts,libs/**/src/**/*.spec.tsx,libs/**/src/**/*.spec.js,libs/**/src/**/*.spec.jsx,libs/**/src/**/*.test.ts,libs/**/src/**/*.test.tsx,libs/**/src/**/*.test.js,libs/**/src/**/*.test.jsx,**/test-setup.ts
        sonar.exclusions=libs/**/src/assets,libs/**/src/environments,./webpack.*.js,./jest.config.ts,./.babelrc.js,libs/**/src/api/models/*.ts
        sonar.testExecutionReportPaths=.reports/libs/splines/test-report.sonar.xml
        sonar.javascript.lcov.reportPaths=.reports/libs/splines/coverage/lcov.info
        sonar.eslint.reportPaths=.reports/libs/splines/eslint.json
        sonar.working.directory=$(Build.ArtifactStagingDirectory)/.sonar
      # sonar.css.stylelint.reportPaths=.reports/libs/**/stylelint.json

  - task: Bash@3
    displayName: 'yarn build'
    inputs:
      targetType: 'inline'
      script: |
        yarn build

  - task: Bash@3
    displayName: 'yarn test'
    inputs:
      targetType: 'inline'
      script: |
        yarn test

  # - task: Bash@3
  #   displayName: "yarn stylelint:ci"
  #   continueOnError: true
  #   inputs:
  #     targetType: "inline"
  #     script: |
  #       yarn stylelint:ci
  #     failOnStderr: false

  - task: Bash@3
    displayName: 'yarn lint:ci'
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        yarn lint:ci
      failOnStderr: false

  - task: SonarCloudAnalyze@1
    inputs:
      jdkversion: 'JAVA_HOME_17_X64'

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'

  - task: PublishTestResults@2
    displayName: 'Publish test results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '.reports/libs/**/test-report.junit.xml'

  - task: reportgenerator@5
    inputs:
      reports: '.reports/libs/**/coverage/cobertura-coverage.xml'
      targetdir: '.reports/libs/**/coverage/coverage'

  - task: PublishCodeCoverageResults@2
    inputs:
      summaryFileLocation: '.reports/libs/**/coverage/cobertura-coverage.xml'

  - task: Npm@1
    displayName: 'Publish splines'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      command: 'publish'
      workingDir: 'dist/libs/splines'
      publishEndpoint: 'NPMPublish'
